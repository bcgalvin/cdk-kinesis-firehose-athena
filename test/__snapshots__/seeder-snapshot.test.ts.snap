// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "seederconstructeventstoragelandingbucketseeddataAwsCliLayer3B32A4DF",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragerawbucketA5644EB5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragerawbucketA5644EB5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "seederconstructeventstoragerawbucketA5644EB5",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructeventstorageaudittableF928A6F1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstorageddbtableD582708A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "KinesisStreamSpecification": Object {
          "StreamArn": Object {
            "Fn::GetAtt": Array [
              "seederconstructeventstoragestreamDF0580FB",
              "Arn",
            ],
          },
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstorageddbtableparameterE19E6D6C": Object {
      "Properties": Object {
        "Name": "/test/ddb-table",
        "Type": "String",
        "Value": Object {
          "Ref": "seederconstructeventstorageddbtableD582708A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructeventstoragelandingbucket9B76A9B7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {
            "EventBridgeEnabled": true,
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragelandingbucketAutoDeleteObjectsCustomResource3584FF42": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "seederconstructeventstoragelandingbucketPolicy3B42D98E",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "seederconstructeventstoragelandingbucket9B76A9B7",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragelandingbucketPolicy3B42D98E": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "seederconstructeventstoragelandingbucket9B76A9B7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragelandingbucket9B76A9B7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragelandingbucket9B76A9B7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragelandingbucket9B76A9B7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragelandingbucket9B76A9B7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "seederconstructs3firehosedeliveryingestionroleFD2104AA",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragelandingbucket9B76A9B7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragelandingbucket9B76A9B7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "seederconstructeventstoragelandingbucketparameterF8ADDCEC": Object {
      "Properties": Object {
        "Name": "/test/landing-bucket",
        "Type": "String",
        "Value": Object {
          "Ref": "seederconstructeventstoragelandingbucket9B76A9B7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructeventstoragelandingbucketseeddataAwsCliLayer3B32A4DF": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "92c405c4551a308bcdd55823f8b16268bd3c38fd2a011edaaf3ed72a80f557c4.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "seederconstructeventstoragelandingbucketseeddataCustomResource049FE55A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketKeyPrefix": "data",
        "DestinationBucketName": Object {
          "Ref": "seederconstructeventstoragerawbucketA5644EB5",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "60e6562fb62efa324d48e786f2e191cde2da113a11fa766837db76917aea2700.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragerawbucketA5644EB5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {
            "EventBridgeEnabled": true,
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:data:abcdd9e5",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragerawbucketAutoDeleteObjectsCustomResource2CF0DF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "seederconstructeventstoragerawbucketPolicy7D8DEB2A",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "seederconstructeventstoragerawbucketA5644EB5",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragerawbucketPolicy7D8DEB2A": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "seederconstructeventstoragerawbucketA5644EB5",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragerawbucketA5644EB5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragerawbucketA5644EB5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragerawbucketA5644EB5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragerawbucketA5644EB5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "seederconstructeventstoragerawbucketparameter08B6012C": Object {
      "Properties": Object {
        "Name": "/test/raw-bucket",
        "Type": "String",
        "Value": Object {
          "Ref": "seederconstructeventstoragerawbucketA5644EB5",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructeventstoragestagingbucketAutoDeleteObjectsCustomResource55526E64": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "seederconstructeventstoragestagingbucketPolicyEC3F42C5",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "seederconstructeventstoragestagingbucketF569C51D",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragestagingbucketF569C51D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {
            "EventBridgeEnabled": true,
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructeventstoragestagingbucketPolicyEC3F42C5": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "seederconstructeventstoragestagingbucketF569C51D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragestagingbucketF569C51D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragestagingbucketF569C51D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragestagingbucketF569C51D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragestagingbucketF569C51D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "seederconstructeventstoragestagingbucketparameterDB84A36C": Object {
      "Properties": Object {
        "Name": "/test/staging-bucket",
        "Type": "String",
        "Value": Object {
          "Ref": "seederconstructeventstoragestagingbucketF569C51D",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructeventstoragestreamDF0580FB": Object {
      "Properties": Object {
        "RetentionPeriodHours": 24,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "ON_DEMAND",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "seederconstructeventstoragestreamparameterFE7348DE": Object {
      "Properties": Object {
        "Name": "/test/stream",
        "Type": "String",
        "Value": Object {
          "Ref": "seederconstructeventstorageddbtableD582708A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructglueresourcesMyGlueCrawlerED40A651": Object {
      "Properties": Object {
        "DatabaseName": Object {
          "Ref": "seederconstructglueresourcesgluedbDAE27AF3",
        },
        "Name": "test-crawler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructglueresourcesMyGlueCrawlerRole11077AC5",
            "Arn",
          ],
        },
        "SchemaChangePolicy": Object {
          "DeleteBehavior": "LOG",
        },
        "Targets": Object {
          "CatalogTargets": Array [
            Object {
              "DatabaseName": Object {
                "Ref": "seederconstructglueresourcesgluedbDAE27AF3",
              },
              "Tables": Array [
                Object {
                  "Ref": "seederconstructglueresourcesgluetableTable1A98AD8D",
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::Glue::Crawler",
    },
    "seederconstructglueresourcesMyGlueCrawlerRole11077AC5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructglueresourcesMyGlueCrawlerRoleDefaultPolicy46BC7093": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragelandingbucket9B76A9B7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragelandingbucket9B76A9B7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructglueresourcesMyGlueCrawlerRoleDefaultPolicy46BC7093",
        "Roles": Array [
          Object {
            "Ref": "seederconstructglueresourcesMyGlueCrawlerRole11077AC5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructglueresourcesathenaworkgroup80F1F257": Object {
      "Properties": Object {
        "Name": Object {
          "Ref": "AWS::StackName",
        },
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "EnforceWorkGroupConfiguration": true,
          "ResultConfiguration": Object {
            "OutputLocation": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "seederconstructeventstoragelandingbucket9B76A9B7",
                  },
                  "/results",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "seederconstructglueresourcesgluedbDAE27AF3": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "ddb_athena",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "seederconstructglueresourcesgluetableTable1A98AD8D": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "seederconstructglueresourcesgluedbDAE27AF3",
        },
        "TableInput": Object {
          "Description": "seeder generated by CDK",
          "Name": "seeder",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "year",
              "Type": "string",
            },
            Object {
              "Name": "month",
              "Type": "string",
            },
            Object {
              "Name": "day",
              "Type": "string",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "CensusId",
                "Type": "string",
              },
              Object {
                "Name": "State",
                "Type": "string",
              },
              Object {
                "Name": "County",
                "Type": "string",
              },
              Object {
                "Name": "TotalPop",
                "Type": "string",
              },
              Object {
                "Name": "Men",
                "Type": "string",
              },
              Object {
                "Name": "Women",
                "Type": "string",
              },
              Object {
                "Name": "Hispanic",
                "Type": "string",
              },
              Object {
                "Name": "White",
                "Type": "string",
              },
              Object {
                "Name": "Black",
                "Type": "string",
              },
              Object {
                "Name": "Native",
                "Type": "string",
              },
              Object {
                "Name": "Asian",
                "Type": "string",
              },
              Object {
                "Name": "Pacific",
                "Type": "string",
              },
              Object {
                "Name": "Citizen",
                "Type": "string",
              },
              Object {
                "Name": "Income",
                "Type": "string",
              },
              Object {
                "Name": "IncomeErr",
                "Type": "string",
              },
              Object {
                "Name": "IncomePerCap",
                "Type": "string",
              },
              Object {
                "Name": "IncomePerCapErr",
                "Type": "string",
              },
              Object {
                "Name": "Poverty",
                "Type": "string",
              },
              Object {
                "Name": "ChildPoverty",
                "Type": "string",
              },
              Object {
                "Name": "Professional",
                "Type": "string",
              },
              Object {
                "Name": "Service",
                "Type": "string",
              },
              Object {
                "Name": "Office",
                "Type": "string",
              },
              Object {
                "Name": "Construction",
                "Type": "string",
              },
              Object {
                "Name": "Production",
                "Type": "string",
              },
              Object {
                "Name": "Drive",
                "Type": "string",
              },
              Object {
                "Name": "Carpool",
                "Type": "string",
              },
              Object {
                "Name": "Transit",
                "Type": "string",
              },
              Object {
                "Name": "Walk",
                "Type": "string",
              },
              Object {
                "Name": "OtherTransp",
                "Type": "string",
              },
              Object {
                "Name": "WorkAtHome",
                "Type": "string",
              },
              Object {
                "Name": "MeanCommute",
                "Type": "string",
              },
              Object {
                "Name": "Employed",
                "Type": "string",
              },
              Object {
                "Name": "PrivateWork",
                "Type": "string",
              },
              Object {
                "Name": "PublicWork",
                "Type": "string",
              },
              Object {
                "Name": "SelfEmployed",
                "Type": "string",
              },
              Object {
                "Name": "FamilyWork",
                "Type": "string",
              },
              Object {
                "Name": "Unemployment",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "seederconstructeventstoragelandingbucket9B76A9B7",
                  },
                  "/data/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "seederconstructglueresourcesgluetableparameter5324098C": Object {
      "Properties": Object {
        "Name": "/test/glue-table",
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "seederconstructglueresourcesgluedbDAE27AF3",
              },
              "-",
              Object {
                "Ref": "seederconstructglueresourcesgluetableTable1A98AD8D",
              },
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "seederconstructs3firehosedeliverydeliveryloggroup7E5A98FB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "/aws/kinesisfirehose/ddb-athena",
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructs3firehosedeliverydeliverylogstream6578685F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "seederconstructs3firehosedeliverydeliveryloggroup7E5A98FB",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructs3firehosedeliverydeliverystream3E5A173B": Object {
      "Properties": Object {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "seederconstructeventstoragelandingbucket9B76A9B7",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 60,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": "/aws/kinesisfirehose/test-stream",
            "LogStreamName": "S3FirehoseDelivery",
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": Object {
            "Enabled": true,
            "InputFormatConfiguration": Object {
              "Deserializer": Object {
                "OpenXJsonSerDe": Object {},
              },
            },
            "OutputFormatConfiguration": Object {
              "Serializer": Object {
                "ParquetSerDe": Object {},
              },
            },
            "SchemaConfiguration": Object {
              "CatalogId": Object {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": Object {
                "Ref": "seederconstructglueresourcesgluedbDAE27AF3",
              },
              "Region": Object {
                "Ref": "AWS::Region",
              },
              "RoleARN": Object {
                "Fn::GetAtt": Array [
                  "seederconstructs3firehosedeliveryingestionroleFD2104AA",
                  "Arn",
                ],
              },
              "TableName": Object {
                "Ref": "seederconstructglueresourcesgluetableTable1A98AD8D",
              },
            },
          },
          "DynamicPartitioningConfiguration": Object {
            "Enabled": true,
          },
          "ErrorOutputPrefix": "error/!{firehose:error-output-type}/dt=!{timestamp:yyyy'-'MM'-'dd}/h=!{timestamp:HH}/",
          "Prefix": "data/year=!{partitionKeyFromLambda:year}/month=!{partitionKeyFromLambda:month}/day=!{partitionKeyFromLambda:day}/",
          "ProcessingConfiguration": Object {
            "Enabled": true,
            "Processors": Array [
              Object {
                "Parameters": Array [
                  Object {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": Object {
                      "Fn::GetAtt": Array [
                        "seederconstructs3firehosedeliveryfirehoseenricherEE11BDA8",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
              Object {
                "Parameters": Array [
                  Object {
                    "ParameterName": "Delimiter",
                    "ParameterValue": "\\\\n",
                  },
                ],
                "Type": "AppendDelimiterToRecord",
              },
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "seederconstructs3firehosedeliveryingestionroleFD2104AA",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "seederconstructeventstoragestreamDF0580FB",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "seederconstructs3firehosedeliveryingestionroleFD2104AA",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "seederconstructs3firehosedeliveryfirehoseenricherEE11BDA8": Object {
      "DependsOn": Array [
        "seederconstructs3firehosedeliveryfirehoseenricherServiceRole5BA73C93",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a73f852869929c0c6e06383edd142e6f2b8ac680698d1848aee8ea5cfbf047f4.zip",
        },
        "Handler": "bootstrap",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructs3firehosedeliveryfirehoseenricherServiceRole5BA73C93",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "seederconstructs3firehosedeliveryfirehoseenricherLogRetention08ED77B2": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "seederconstructs3firehosedeliveryfirehoseenricherEE11BDA8",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "seederconstructs3firehosedeliveryfirehoseenricherServiceRole5BA73C93": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructs3firehosedeliveryingestionroleDefaultPolicy6643A6FD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "seederconstructeventstoragestreamDF0580FB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragelandingbucket9B76A9B7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragelandingbucket9B76A9B7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "seederconstructs3firehosedeliverydeliveryloggroup7E5A98FB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructs3firehosedeliveryfirehoseenricherEE11BDA8",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructs3firehosedeliveryfirehoseenricherEE11BDA8",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructs3firehosedeliveryingestionroleDefaultPolicy6643A6FD",
        "Roles": Array [
          Object {
            "Ref": "seederconstructs3firehosedeliveryingestionroleFD2104AA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructs3firehosedeliveryingestionroleFD2104AA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "kinesis:DescribeStream",
                    "kinesis:GetRecords",
                    "kinesis:GetShardIterator",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "seederconstructeventstoragestreamDF0580FB",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "glue:GetTableVersions",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AllowFirehose",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructseedtaskCrawlerStarter23DB5C77": Object {
      "DependsOn": Array [
        "seederconstructseedtaskCrawlerStarterServiceRoleDefaultPolicy85F722CC",
        "seederconstructseedtaskCrawlerStarterServiceRole37A01C33",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a1450ab46d56f1132576c826c6d74f7cdf60b8b8e75016edc1384ccc008c56bd.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "GLUE_TRIGGER_NAME": Object {
              "Ref": "seederconstructseedtaskglueTriggerExchanges1B34C94C",
            },
          },
        },
        "Handler": "bootstrap",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskCrawlerStarterServiceRole37A01C33",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "seederconstructseedtaskCrawlerStarterCustomResource6E31BB0D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskCrawlerStarterProviderframeworkonEvent3F275E37",
            "Arn",
          ],
        },
        "taskId": "seed-dynamo",
      },
      "Type": "Custom::SfnStarter",
      "UpdateReplacePolicy": "Delete",
    },
    "seederconstructseedtaskCrawlerStarterProviderframeworkonEvent3F275E37": Object {
      "DependsOn": Array [
        "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRoleDefaultPolicy151575E4",
        "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRole2F37282C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "885e74c18034f7d2833ec7129bb76a442e75d84f9c21ce7990bbb3aea67ab779.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-stack/seeder-construct/seed-task/CrawlerStarterProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "seederconstructseedtaskinvokesfn2DCB1D7F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRole2F37282C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRole2F37282C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRoleDefaultPolicy151575E4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructseedtaskinvokesfn2DCB1D7F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructseedtaskinvokesfn2DCB1D7F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRoleDefaultPolicy151575E4",
        "Roles": Array [
          Object {
            "Ref": "seederconstructseedtaskCrawlerStarterProviderframeworkonEventServiceRole2F37282C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructseedtaskCrawlerStarterServiceRole37A01C33": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructseedtaskCrawlerStarterServiceRoleDefaultPolicy85F722CC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "glue:StartTrigger",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":trigger/",
                    Object {
                      "Ref": "seederconstructseedtaskglueTriggerExchanges1B34C94C",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructseedtaskCrawlerStarterServiceRoleDefaultPolicy85F722CC",
        "Roles": Array [
          Object {
            "Ref": "seederconstructseedtaskCrawlerStarterServiceRole37A01C33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructseedtaskStateMachine87A58956": Object {
      "DependsOn": Array [
        "seederconstructseedtaskStateMachineRoleDefaultPolicy81BDA013",
        "seederconstructseedtaskStateMachineRole21B840BE",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Log Run Start\\",\\"States\\":{\\"Log Run Start\\":{\\"Next\\":\\"seed-ddb\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"PK\\":{\\"S.$\\":\\"$.taskId\\"},\\"SK\\":{\\"S.$\\":\\"States.Format('{}', $.timestamp)\\"},\\"Status\\":{\\"S\\":\\"TASK RUN START\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "seederconstructeventstorageaudittableF928A6F1",
              },
              "\\"}},\\"seed-ddb\\":{\\"Next\\":\\"Log Seed Success\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"TimeoutSeconds\\":300,\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "seederconstructseedtaskddbseeder7E84DA27",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"Log Seed Success\\":{\\"Next\\":\\"Wait 5 minutes for seeder\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"PK\\":{\\"S.$\\":\\"$.taskId\\"},\\"SK\\":{\\"S\\":\\"1649433119\\"},\\"Status\\":{\\"S\\":\\"DYNAMO SEED SUCCESS\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "seederconstructeventstorageaudittableF928A6F1",
              },
              "\\"}},\\"Wait 5 minutes for seeder\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":300,\\"Next\\":\\"crawler-starter\\"},\\"crawler-starter\\":{\\"Next\\":\\"Wait 5 minutes for crawler\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"TimeoutSeconds\\":300,\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "seederconstructseedtaskCrawlerStarter23DB5C77",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"Wait 5 minutes for crawler\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":300,\\"Next\\":\\"Log Crawl Success\\"},\\"Log Crawl Success\\":{\\"Next\\":\\"Log Run Success\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"PK\\":{\\"S.$\\":\\"$.taskId\\"},\\"SK\\":{\\"S\\":\\"1649433119\\"},\\"Status\\":{\\"S\\":\\"CRAWL SUCCESS\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "seederconstructeventstorageaudittableF928A6F1",
              },
              "\\"}},\\"Log Run Success\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"PK\\":{\\"S.$\\":\\"$.taskId\\"},\\"SK\\":{\\"S\\":\\"1649433119\\"},\\"Status\\":{\\"S\\":\\"TASK RUN SUCCESS\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "seederconstructeventstorageaudittableF928A6F1",
              },
              "\\"}}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskStateMachineRole21B840BE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "seederconstructseedtaskStateMachineRole21B840BE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructseedtaskStateMachineRoleDefaultPolicy81BDA013": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "seederconstructeventstorageaudittableF928A6F1",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructseedtaskddbseeder7E84DA27",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructseedtaskddbseeder7E84DA27",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructseedtaskCrawlerStarter23DB5C77",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructseedtaskCrawlerStarter23DB5C77",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstorageaudittableF928A6F1",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructseedtaskStateMachineRoleDefaultPolicy81BDA013",
        "Roles": Array [
          Object {
            "Ref": "seederconstructseedtaskStateMachineRole21B840BE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructseedtaskddbseeder7E84DA27": Object {
      "DependsOn": Array [
        "seederconstructseedtaskddbseederServiceRoleDefaultPolicy227EA068",
        "seederconstructseedtaskddbseederServiceRole6987B73E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "13273bbcfd2dd2923fb28d3cb720956bf9884e71b52b7a886b5ff558775be8be.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "DDB_TABLE": Object {
              "Ref": "seederconstructeventstorageddbtableD582708A",
            },
            "S3_BUCKET": Object {
              "Ref": "seederconstructeventstoragerawbucketA5644EB5",
            },
          },
        },
        "Handler": "bootstrap",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskddbseederServiceRole6987B73E",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "seederconstructseedtaskddbseederServiceRole6987B73E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "seederconstructseedtaskddbseederServiceRoleDefaultPolicy227EA068": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstoragerawbucketA5644EB5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "seederconstructeventstoragerawbucketA5644EB5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "seederconstructeventstorageddbtableD582708A",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructseedtaskddbseederServiceRoleDefaultPolicy227EA068",
        "Roles": Array [
          Object {
            "Ref": "seederconstructseedtaskddbseederServiceRole6987B73E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructseedtaskglueTriggerExchanges1B34C94C": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "CrawlerName": "test-crawler",
          },
        ],
        "Description": "Start the Glue Crawler",
        "Type": "ON_DEMAND",
      },
      "Type": "AWS::Glue::Trigger",
    },
    "seederconstructseedtaskinvokesfn2DCB1D7F": Object {
      "DependsOn": Array [
        "seederconstructseedtaskinvokesfnServiceRoleDefaultPolicyD01F7595",
        "seederconstructseedtaskinvokesfnServiceRoleF5E5760B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "16425f132126fb41eb4a8848409ecdbd65663437235262aae991b39685848fdd.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "StateMachineArn": Object {
              "Ref": "seederconstructseedtaskStateMachine87A58956",
            },
          },
        },
        "Handler": "bootstrap",
        "Role": Object {
          "Fn::GetAtt": Array [
            "seederconstructseedtaskinvokesfnServiceRoleF5E5760B",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
      },
      "Type": "AWS::Lambda::Function",
    },
    "seederconstructseedtaskinvokesfnServiceRoleDefaultPolicyD01F7595": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "seederconstructseedtaskStateMachine87A58956",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "seederconstructseedtaskinvokesfnServiceRoleDefaultPolicyD01F7595",
        "Roles": Array [
          Object {
            "Ref": "seederconstructseedtaskinvokesfnServiceRoleF5E5760B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "seederconstructseedtaskinvokesfnServiceRoleF5E5760B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
